name: 'Terraform'

on:
  workflow_dispatch

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: terraform

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Echo secrets
      run: |
        echo $TF_VARS >> terraform.tfvars
        echo $TF_BACKEND >> config.azurerm.tfbackend
      env:
        TF_VARS : ${{secrets.TF_BACKEND}}

    - name: Az CLI login
      uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      run: terraform init --upgrade --backend-config=config.azurerm.tfbackend

    # Generates an execution plan for Terraform
    - name: Terraform Plan
      run: terraform plan -var-file=terraform.tfvars

    - name: Terraform Apply
      run: terraform apply -var-file=terraform.tfvars
